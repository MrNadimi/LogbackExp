<?xml version="1.0"?>
<!-- The logback config by MrNadimi-->
<configuration>

    <!-- Console log -->
    <appender name="MRNADIMI_CONSOLE_APPENDER" class="ch.qos.logback.core.ConsoleAppender">
        <withJansi>false</withJansi>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-4relative %-5level [%thread] %logger{36}  %msg%n</pattern>
        </encoder>
    </appender>
    <!-- end -->


    <!-- Console Spring log : <withJansi> can set colored -->
    <!-- On Windows machines setting withJansi to true enables ANSI
        color code interpretation by the Jansi library. This requires
        org.fusesource.jansi:jansi:1.8 on the class path.  Note that
        Unix-based operating systems such as Linux and Mac OS X
        support ANSI color codes by default. -->
    <appender name="MRNADIMI_CONSOLE_SPRING_APPENDER" class="ch.qos.logback.core.ConsoleAppender">
        <withJansi>true</withJansi>
        <encoder class="com.mrnadimi.logger.logback.patterns.CustomPatternLayoutEncoder">
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-4relative %SpringColor(%-5level) [%thread] %cyan(%X{class_logger}){36} %msg%n</pattern>
        </encoder>
    </appender>
    <!-- end -->



    <!-- File appender for log inside the file -->
    <appender name="MRNADIMI_FILE_APPENDER" class="ch.qos.logback.core.FileAppender">
        <file>logfile.log</file>
        <!-- Append inside current file -->
        <append>true</append>
        <!-- encoder for text format inside file -->
        <encoder>
            <!-- My own pattern -->
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-4relative %-5level [%thread] %X{class_logger} %msg%n</pattern>
        </encoder>
    </appender>
    <!-- End file appender -->

    <!-- File log: Rolling based on file size : TODO -->
   <!-- <appender name="MRNADIMI_FILE_APPENDER_ROLLING_FILE_SIZE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>log/size/app.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>log/size/app.%i.log.zip</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>3</maxIndex>
            <totalSizeCap>1MB</totalSizeCap>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>5KB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-4relative %-5level [%thread] %X{class_logger} %msg%n</pattern>
        </encoder>
    </appender> -->
    <!-- End -->


    <!-- File Rolling based on time -->
    <appender name="MRNADIMI_FILE_APPENDER_ROLLING_FILE_TIME" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>log/time/app.%d{yyyy-MM-dd__HH}.log
            </fileNamePattern>
            <maxHistory>0</maxHistory>
            <!--<totalSizeCap>30MB</totalSizeCap>-->
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-4relative %-5level [%thread] %X{class_logger} %msg%n</pattern>
        </encoder>
    </appender>
    <!-- end -->

    <!-- File rolling based on time and size : TODO-->
    <!--<appender name="MRNADIMI_FILE_APPENDER_ROLLING_FILE_TIME_AND_SIZE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>log/timeAndSize/app.log</file>
        <rollingPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>
                log/timeAndSize/app.%d{yyyy-MM-dd-mm}.%i.log.zip
            </fileNamePattern>
            <maxFileSize>5KB</maxFileSize>
            <maxHistory>20</maxHistory>
            <totalSizeCap>1MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-4relative %-5level [%thread] %X{class_logger} %msg%n</pattern>
        </encoder>
    </appender> -->
    <!-- End -->


    <!--
     additivity=false : ensures analytics data only goes to the analytics log
     -->
    <logger name="FILE_LOGGER" additivity="false" level="TRACE">
        <appender-ref ref="MRNADIMI_FILE_APPENDER"/>
    </logger>

    <!-- Rolling based on file size: TODO -->
    <!-- <logger name="FILE_ROLLING_SIZE_LOGGER" additivity="false" level="TRACE">
        <appender-ref ref="MRNADIMI_FILE_APPENDER_ROLLING_FILE_SIZE"/>
    </logger> -->
    <!-- end -->

    <!-- Rolling based on file time -->
    <logger name="FILE_ROLLING_TIME_LOGGER" additivity="false" level="TRACE">
        <appender-ref ref="MRNADIMI_FILE_APPENDER_ROLLING_FILE_TIME"/>
    </logger>
    <!-- end -->

    <!-- Rolling based on file time and size TODO -->
    <!-- <logger name="FILE_ROLLING_TIME_AND_SIZE_LOGGER" additivity="false" level="TRACE">
        <appender-ref ref="MRNADIMI_FILE_APPENDER_ROLLING_FILE_TIME_AND_SIZE"/>
    </logger> -->
    <!-- end -->

    <!-- Spring logger -->
    <logger name="SPRING_LOGGER" additivity="false" level="TRACE">
        <appender-ref ref="MRNADIMI_CONSOLE_SPRING_APPENDER"/>
    </logger>

    <!-- Root log: Log default ra be in halat taghir dadam -->
    <root level="TRACE" >
        <appender-ref ref="MRNADIMI_CONSOLE_APPENDER"/>
    </root>
</configuration>
